* Who
#+BEGIN_SRC emacs-lisp
    (setq user-mail-address	"stephen@stephenmaxwell.me"
	  user-full-name	"Stephen Maxwell")
#+END_SRC
* Packages
Add package sources
#+BEGIN_SRC emacs-lisp

(require 'package)
(setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                         ("melpa" . "https://melpa.org/packages/")))

(pdf-tools-install)
(require 'elfeed-org)
(elfeed-org)
(require 'dashboard)
(dashboard-setup-startup-hook)
(require 'moe-theme)
(moe-light)

#+END_SRC

* Backups
 Stop emacs cluttering directories with save files 
#+BEGIN_SRC 

(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))

#+END_SRC

* GUI configuration
Set font to Iosevka and turn off unused GUI elements. The menu bar can be handy to 
refresh key combinations. 

#+BEGIN_SRC emacs-lisp 

(add-to-list 'default-frame-alist '(font . "Iosevka" ))
(set-face-attribute 'default t :font "Iosevka" )

(tool-bar-mode -1)
(scroll-bar-mode -1)
(menu-bar-mode 1)
(blink-cursor-mode -1)

#+END_SRC

** Mini buffer
 Make it easier to answer questions.
 #+BEGIN_SRC emacs-lisp
 (fset 'yes-or-no-p 'y-or-n-p)
 #+END_SRC 

* History
#+BEGIN_SRC emacs-lisp 

(setq savehist-file "~/.emacs.d/savehist")
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables
      '(kill-ring
        search-ring
        regexp-search-ring))

#+END_SRC

* Highlight uncommitted
#+BEGIN_SRC emacs-lisp
(require 'diff-hl)
(add-hook 'prog-mode-hook 'turn-on-diff-hl-mode)
(add-hook 'vc-dir-mode-hook 'turn-on-diff-hl-mode)
(global-set-key (kbd "C-x g") 'magit-status)
#+END_SRC

* Org-mode
  Instead of asterisks see pretty bullets
#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC

See ⤵ instead of ...
#+BEGIN_SRC emacs-lisp 
(setq org-ellipsis "⤵")
#+END_SRC


Quickly instert emacs lisp source block
#+BEGIN_SRC emacs-lisp
(add-to-list 'org-structure-template-alist
             '("el" "#+BEGIN_SRC emacs-lisp\n?\n#+END_SRC"))
#+END_SRC

My org files are stored in =~/Main/Doc/org/=. Set location info and handy bindings

#+BEGIN_SRC emacs-lisp 

(setq org-src-window-setup 'current-window)
(setq org-directory "~/Main/Doc/org/")
(setq org-agenda-files '("~/Main/Doc/org"))
(setq org-default-notes-file (concat org-directory "/index.org"))
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(define-key global-map "\C-cc" 'org-capture)

(defun org-file-path (filename)
  "Return the absolute address of an org file, given its relative name."
  (concat (file-name-as-directory org-directory) filename))

#+END_SRC

Once a TODO is done move to =archive.org= (snippet from [[https://github.com/hrs/dotfiles/blob/master/emacs/.emacs.d/configuration.org][Harry Schwartz]])
#+BEGIN_SRC emacs-lisp
(setq org-archive-location
      (concat (org-file-path "archive.org") "::* From %s"))

(defun hrs/mark-done-and-archive ()
  "Mark the state of an org-mode item as DONE and archive it."
  (interactive)
  (org-todo 'done)
  (org-archive-subtree))

(define-key org-mode-map (kbd "C-c C-x C-s") 'hrs/mark-done-and-archive)
(setq org-log-done 'time)
#+END_SRC
* gnus
#+BEGIN_SRC emacs-lisp

(require 'gnus)
(setq gnus-select-method
    '(nnimap "Fastmail"
     (nnimap-server-port "993")
     (nnimap-stream ssl)
     (nnimap-address "imap.fastmail.com")))

(require 'smtpmail) 
(setq message-send-mail-function 'smtpmail-send-it)
#+END_SRC
